swagger: '2.0'
info:
  description: A in memory cache layer implementation using mongo DB for data persistence and demonstration of pagination
  version: 1.0.0
  title: A Cache Service
  contact:
    email: shubhamvrkr@gmail.com
host: 'localhost:8080'
basePath: /
tags:
  - name: Employee
    description: REST API about employee
schemes:
  - http
paths:
  /employee:
    post:
      tags:
        - Employee
      summary: Add new employee in cache
      description: API adds new employee in the cache memory and also saves it in persistent store
      operationId: addEmployee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Employee that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Employee'
      responses:
        '201':
          description: Employee sucessfully saved
        '400':
          description: Bad request
        '500':
          description: Internal server error
    get:
      tags:
        - Employee
      summary: Finds Employees by gender
      description: Array of employees matching gender along with next page url
      operationId: getEmployeeBySex
      produces:
        - application/json
      parameters:
        - name: sex
          in: query
          description: Gender of the employee
          required: true
          type: string
        - name: lastid
          in: query
          description: Last id of the employee recieved in last page
          required: true
          type: string
        - name: limit
          in: query
          description: Page limit
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Response'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  '/employee/{id}':
    get:
      tags:
        - Employee
      summary: Find employee by ID
      description: Returns employee details of matching employee ID
      operationId: getEmployeeByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of required employee
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Successfull operation
          schema:
            $ref: '#/definitions/Employee'
        '400':
          description: Bad request
        '404':
          description: Employee not found
        '500':
          description: Internal server error
  '/reload':
    get:
      tags:
        - Events
      summary: Reloads the cache from database
      description: Triggers a message to MQ on which server reloads the cache from database
      operationId: reload
      produces:
        - application/json
      responses:
        '200':
          description: Sucessfully triggered reload
          schema:
            $ref: '#/definitions/Employee'
        '500':
          description: Internal server error

definitions:
  Employee:
    type: object
    properties:
      id:
        type: integer
        format: int32
      firstname:
        type: string
      lastname:
        type: string
      age:
        type: integer
        format: int32
      sex:
        type: string
        minLength: 1
        maxLength: 1
  Response:
    type: object
    properties:
      employees:
        type: array
        items:
          $ref: '#/definitions/Employee'
      next:
        type: string
